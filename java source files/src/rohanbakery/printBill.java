//Class for saving bill in pdf format
package rohanbakery;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.GrayColor;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.pdf.PdfWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import org.jdesktop.swingx.JXLabel;


public class printBill extends javax.swing.JFrame {

    //Global variables of the class
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    boolean listLoaded = false;
    
    //Constructor for initialist components
    public printBill() {
        initComponents();
        centerFrame();  //Set frame in the center of the screen
        conn = ConnectToDatabase.getConnection();   //Get connection to the database
        setComboBoxValues();    //Set the combo box values
        listLoaded = true;  //List has been loaded completely
    }
    
    //Functin to set frame in the center of the screen
    public void centerFrame() {
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation((size.width/2 - getWidth()/2),(size.height/2 - getHeight()/2));
    }
    
    //Function to set the values of the combo box using the item id in the billing table
    public void setComboBoxValues() {
        String sql = "select bNumber from billing where bOk=? group by bNumber";
        
        cbo_bNumber.removeAllItems();
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1,"Yes");
            rs = pst.executeQuery();
            
            while (rs.next()) {
                cbo_bNumber.addItem(rs.getString(1));
            }
            
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Billing list cannot be loaded");
        }finally {
            try{
                rs.close();
                pst.close();
                
            }catch(Exception e) {}
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_main = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_bCustName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbo_bNumber = new javax.swing.JComboBox<>();
        btn_saveBill = new javax.swing.JButton();
        txt_bDate = new org.jdesktop.swingx.JXDatePicker();
        btn_back = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_bAmount = new javax.swing.JTextField();
        btn_clea = new javax.swing.JButton();
        lbl_background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Print bill to PDF");
        setAlwaysOnTop(true);
        setResizable(false);

        pnl_main.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setText("Save bill in PDF :");
        pnl_main.add(jLabel1);
        jLabel1.setBounds(30, 10, 230, 23);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel3.setText("Bill date : ");
        pnl_main.add(jLabel3);
        jLabel3.setBounds(40, 110, 110, 16);

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel4.setText("Customer name : ");
        pnl_main.add(jLabel4);
        jLabel4.setBounds(40, 160, 110, 16);

        txt_bCustName.setEditable(false);
        txt_bCustName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        pnl_main.add(txt_bCustName);
        txt_bCustName.setBounds(150, 150, 210, 30);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel6.setText("Select Bill number : ");
        pnl_main.add(jLabel6);
        jLabel6.setBounds(40, 60, 110, 16);

        cbo_bNumber.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cbo_bNumber.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbo_bNumberItemStateChanged(evt);
            }
        });
        pnl_main.add(cbo_bNumber);
        cbo_bNumber.setBounds(150, 50, 210, 30);

        btn_saveBill.setText("Save bill");
        btn_saveBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveBillActionPerformed(evt);
            }
        });
        pnl_main.add(btn_saveBill);
        btn_saveBill.setBounds(60, 300, 130, 40);

        txt_bDate.setEditable(false);
        pnl_main.add(txt_bDate);
        txt_bDate.setBounds(150, 100, 210, 30);

        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        pnl_main.add(btn_back);
        btn_back.setBounds(270, 10, 90, 30);

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel5.setText("Bill amount : ");
        pnl_main.add(jLabel5);
        jLabel5.setBounds(40, 210, 110, 16);

        txt_bAmount.setEditable(false);
        txt_bAmount.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        pnl_main.add(txt_bAmount);
        txt_bAmount.setBounds(150, 200, 210, 30);

        btn_clea.setText("Clear");
        btn_clea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cleaActionPerformed(evt);
            }
        });
        pnl_main.add(btn_clea);
        btn_clea.setBounds(230, 300, 130, 40);

        lbl_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.images/Background image.jpeg"))); // NOI18N
        pnl_main.add(lbl_background);
        lbl_background.setBounds(0, 0, 430, 380);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_main, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_main, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
   
    //Action performed to save the bill in pdf
    private void btn_saveBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveBillActionPerformed
        if((cbo_bNumber.getSelectedItem().toString()).equals("")) {    //Check to see if bill details has been selected
            JOptionPane.showMessageDialog(null,"Please select the bill number to save in PDF");
        } else {
            String sql ="Select * from billing where bNumber=? and bOk=?";
            String billNumber = cbo_bNumber.getSelectedItem().toString();
            String customerName = txt_bCustName.getText();
            String billAmount = "Amount = Rs. "+txt_bAmount.getText();
            //Settig bill date as per the format year/month/date
            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");        
            String billDate = format.format(txt_bDate.getDate());
            
            JFileChooser dialog = new JFileChooser();
            
            //Replace / with _ for the name of the pdf bill
            String billnumStr = billNumber;
            billnumStr = billnumStr.replaceAll("/", "_");
            
            dialog.setSelectedFile(new File(billnumStr +"_"+ billDate +"_"+ customerName+"_Bill"+".pdf"));
            int dialogResult = dialog.showSaveDialog(null);
                
            if (dialogResult==JFileChooser.APPROVE_OPTION){
                String filePath = dialog.getSelectedFile().getPath();
                try {   
                    pst = conn.prepareStatement(sql);
                    pst.setString(1,cbo_bNumber.getSelectedItem().toString());
                    pst.setString(2,"Yes");
                    rs = pst.executeQuery();

                    Document myDocument = new Document();
                    PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                    PdfPTable table = new PdfPTable(6);
                    myDocument.open();
                   
                    float[] columnWidths = new float[] {2,2,10,3,4,4};
                    table.setWidths(columnWidths);

                    table.setWidthPercentage(100); //set table width to 100%
           
                    //Add heading and date to the document
                    myDocument.add(new Paragraph("ROHAN'S BAKERY",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD )));
                    myDocument.add(new Paragraph(new java.util.Date().toString()));
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    
                    myDocument.add(new Paragraph("------------------------------------------------------------------------"
                                                +"------------------------------------------------------"));
                    
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    
                    //Add bill number, date and customer name to the document
                    myDocument.add(new Paragraph("Bill No - "+billNumber ,FontFactory.getFont(FontFactory.TIMES_BOLD,15,Font.BOLD )));
                    myDocument.add(new Paragraph("Bill Date - "+billDate ,FontFactory.getFont(FontFactory.TIMES_BOLD,15,Font.BOLD )));
                    myDocument.add(new Paragraph("Customer Name - "+customerName ,FontFactory.getFont(FontFactory.TIMES_BOLD,15,Font.BOLD )));
                    
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    
                    myDocument.add(new Paragraph("------------------------------------------------------------------------"
                                                +"------------------------------------------------------"));
                    
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph("Bill summary : ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    
                    //Adding heading to the tables
                    table.addCell(new PdfPCell(new Paragraph("Sl No.",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Item Id",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Item Name",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Quantity",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Rate",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Amount",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.BOLD))));
          
                    //Adding data of the table
                    int slNo = 1;   //Counter for Serial number
                    while(rs.next()) { 
                        table.addCell(new PdfPCell(new Paragraph(Integer.toString(slNo),FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(5),FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(6),FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(8),FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(9),FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(12),FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN))));
                        slNo++; //Increasing the counter for the serial number
                    }
                   
                    myDocument.add(table);
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    
                    //Paragraph amount for the total amount of the bill
                    //Done this way to put right alighnment to the text
                    Paragraph amt = new Paragraph(billAmount,FontFactory.getFont(FontFactory.TIMES_BOLD,12,Font.BOLD ));
                    amt.setAlignment(Paragraph.ALIGN_RIGHT);
                    myDocument.add(amt);    //Add amount paragraph with font settings and alighnment already done
                    
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph("------------------------------------------------------------------------"
                                                +"------------------------------------------------------"));
                    
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    myDocument.add(new Paragraph(" ",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD )));//Blank spacing
                    
                    myDocument.add(new Paragraph("--------------------------------------"));
                    myDocument.add(new Paragraph("Authorised Signature",FontFactory.getFont(FontFactory.TIMES_ROMAN,10,Font.PLAIN )));
                    
                    myDocument.newPage();
                    myDocument.close();  
                    JOptionPane.showMessageDialog(null,"Bill was succefully generated");
                } catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
                }
                finally {
                    try{
                        rs.close();
                        pst.close();
                    } catch(Exception e){
                        JOptionPane.showMessageDialog(null,e);
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_saveBillActionPerformed
    
    //Action performed when clear button is clicked
    private void btn_cleaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cleaActionPerformed
        
        //Code to remove all selected bill details        
        txt_bDate.setDate(null);
        txt_bCustName.setText("");
        txt_bAmount.setText("");
    }//GEN-LAST:event_btn_cleaActionPerformed

    //Action performed to show the details of the bill when bill number is selected
    private void cbo_bNumberItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbo_bNumberItemStateChanged
        if(listLoaded) {
            String sql = "select bNumber, bDate, bCustName, sum(bAmount) from billing where bNumber=? and bOk = ? group by bnumber";
        
            try {
                pst = conn.prepareStatement(sql);
                pst.setString(1,cbo_bNumber.getSelectedItem().toString());
                pst.setString(2,"Yes");
                rs = pst.executeQuery();
                rs.next();  //Move resultset to the first pointer
                       
                txt_bDate.setDate(rs.getDate(2));
                txt_bCustName.setText(rs.getString(3));
                txt_bAmount.setText(rs.getString(4));
                
               }catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Bill details not found");
            }finally {
                try{
                    rs.close();
                    pst.close();
                }catch(Exception e) {}
            }
        }
    }//GEN-LAST:event_cbo_bNumberItemStateChanged

    //Code to go back
    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        generateBill gb = new generateBill();
        gb.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(printBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(printBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(printBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(printBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new printBill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_clea;
    private javax.swing.JButton btn_saveBill;
    private javax.swing.JComboBox<String> cbo_bNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JPanel pnl_main;
    private javax.swing.JTextField txt_bAmount;
    private javax.swing.JTextField txt_bCustName;
    private org.jdesktop.swingx.JXDatePicker txt_bDate;
    // End of variables declaration//GEN-END:variables
}
